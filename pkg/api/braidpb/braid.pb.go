// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: braid.proto

package braidpb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorship *Authorship          `protobuf:"bytes,1,opt,name=authorship,proto3" json:"authorship,omitempty"`
	Timestamp  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Parentage  *Parentage           `protobuf:"bytes,3,opt,name=parentage,proto3" json:"parentage,omitempty"`
	Data       *Payload             `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetAuthorship() *Authorship {
	if x != nil {
		return x.Authorship
	}
	return nil
}

func (x *Message) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Message) GetParentage() *Parentage {
	if x != nil {
		return x.Parentage
	}
	return nil
}

func (x *Message) GetData() *Payload {
	if x != nil {
		return x.Data
	}
	return nil
}

// Identity is a public reference to a specific peer.
//
// Identity is conceptually similar to a cryptographic public key and can be
// shared freely.
//
// Identity is not validated or signed by any other authority and it is up to
// the application to determine if the peer presenting an Identity is
// trustworthy.
type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ed25519PublicKey []byte `protobuf:"bytes,1,opt,name=ed25519_public_key,json=ed25519PublicKey,proto3" json:"ed25519_public_key,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{1}
}

func (x *Identity) GetEd25519PublicKey() []byte {
	if x != nil {
		return x.Ed25519PublicKey
	}
	return nil
}

// Secret is a private value that can be used by a node to act as an Identity.
//
// Secret is conceptually similar to a cryptographic private key and should not
// be shared.
type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ed25519PrivateKey []byte `protobuf:"bytes,1,opt,name=ed25519_private_key,json=ed25519PrivateKey,proto3" json:"ed25519_private_key,omitempty"`
}

func (x *Secret) Reset() {
	*x = Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{2}
}

func (x *Secret) GetEd25519PrivateKey() []byte {
	if x != nil {
		return x.Ed25519PrivateKey
	}
	return nil
}

type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ed25519V1 []byte `protobuf:"bytes,1,opt,name=ed25519_v1,json=ed25519V1,proto3" json:"ed25519_v1,omitempty"` // == sign(Ref(Message).shake256_64_v1)
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{3}
}

func (x *Signature) GetEd25519V1() []byte {
	if x != nil {
		return x.Ed25519V1
	}
	return nil
}

// Authorship identifies a particular message author and the committed state
// that author was in when authoring a given message.
type Authorship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity       *Identity       `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Signature      *Signature      `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	PostCommitment *PostCommitment `protobuf:"bytes,3,opt,name=post_commitment,json=postCommitment,proto3" json:"post_commitment,omitempty"`
	PreCommitment  *PreCommitment  `protobuf:"bytes,4,opt,name=pre_commitment,json=preCommitment,proto3" json:"pre_commitment,omitempty"`
}

func (x *Authorship) Reset() {
	*x = Authorship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Authorship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authorship) ProtoMessage() {}

func (x *Authorship) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authorship.ProtoReflect.Descriptor instead.
func (*Authorship) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{4}
}

func (x *Authorship) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *Authorship) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Authorship) GetPostCommitment() *PostCommitment {
	if x != nil {
		return x.PostCommitment
	}
	return nil
}

func (x *Authorship) GetPreCommitment() *PreCommitment {
	if x != nil {
		return x.PreCommitment
	}
	return nil
}

// MessageRef uniquely identifies a message in a braid.
//
// MessageRef must be derived entirely from the contents of a single Message and
// must not require looking up any referred Messages. This allows MessageRef to
// refer to orphans that a node has not yet linked into a braid.
type MessageRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// shake256_64_v1 for a message is the SHAKE256 hash obtained by writing
	// the following in order to a sponge:
	//
	//  1. message.authorship.identity.ed25519_public_key
	//     - omitted: signature (would be circular dependancy)
	//  2. message.authorship.post_commitment
	//     .timestamp
	//     .messages
	//     .state
	//  3. message.authorship.pre_commitment.payload_refs[]
	//  4. message.timestamp
	//     - little-endian UTC seconds since Unix epoch (8 bytes)
	//     - little-endian UTC nanoseconds (4 bytes)
	//  3. message.parentage.parents[i].ref.shake256_64_v1
	//     - omitted: contribution (validated on receipt of message)
	//  4. message.data.data
	//
	// Output of 64 bytes is then obtained from the sponge.
	//
	// No data is written for a field that is empty or the zero timestamp. As
	// a result, the shake256_64_v1 for the genesis message is simply 64 bytes
	// of output read from an initialized SHAKE256 sponge.
	Shake256_64V1 []byte `protobuf:"bytes,1,opt,name=shake256_64_v1,json=shake25664V1,proto3" json:"shake256_64_v1,omitempty"`
}

func (x *MessageRef) Reset() {
	*x = MessageRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRef) ProtoMessage() {}

func (x *MessageRef) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRef.ProtoReflect.Descriptor instead.
func (*MessageRef) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{5}
}

func (x *MessageRef) GetShake256_64V1() []byte {
	if x != nil {
		return x.Shake256_64V1
	}
	return nil
}

type MessageSetRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// shake256_64_v1 for a set of messages is the SHAKE256 hash of the Ref's of
	// each of the messages in the set.
	//
	// The set is ordered first by increasing timestamp, and ties are broken by
	// increasing message hash value (Ref(message).shake256_64_v1).
	Shake256_64V1 []byte `protobuf:"bytes,1,opt,name=shake256_64_v1,json=shake25664V1,proto3" json:"shake256_64_v1,omitempty"`
}

func (x *MessageSetRef) Reset() {
	*x = MessageSetRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSetRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSetRef) ProtoMessage() {}

func (x *MessageSetRef) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSetRef.ProtoReflect.Descriptor instead.
func (*MessageSetRef) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{6}
}

func (x *MessageSetRef) GetShake256_64V1() []byte {
	if x != nil {
		return x.Shake256_64V1
	}
	return nil
}

// PostCommitment commits an author to a particular historical state of the
// braid and the application.
type PostCommitment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cut defines a boundary in the braid that splits all messages into either
	// a "prior" side (timestamps < cut) or "recent" side (timestamps >= cut).
	Cut *timestamp.Timestamp `protobuf:"bytes,1,opt,name=cut,proto3" json:"cut,omitempty"`
	// Messages refers to the ordered set of orphans resulting from removing
	// messages on the prior side of the cut; i.e. messages on the recent side
	// with one or more parents on the prior side.
	Messages *MessageSetRef `protobuf:"bytes,2,opt,name=messages,proto3" json:"messages,omitempty"`
	// state is an application-defined state after applying all messages on the
	// prior side of the cut to the application.
	State *StateRef `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *PostCommitment) Reset() {
	*x = PostCommitment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCommitment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCommitment) ProtoMessage() {}

func (x *PostCommitment) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCommitment.ProtoReflect.Descriptor instead.
func (*PostCommitment) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{7}
}

func (x *PostCommitment) GetCut() *timestamp.Timestamp {
	if x != nil {
		return x.Cut
	}
	return nil
}

func (x *PostCommitment) GetMessages() *MessageSetRef {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *PostCommitment) GetState() *StateRef {
	if x != nil {
		return x.State
	}
	return nil
}

// Precommitment commits an author to a particular set of future payloads.
type PreCommitment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadRefs []*PayloadRef `protobuf:"bytes,1,rep,name=payload_refs,json=payloadRefs,proto3" json:"payload_refs,omitempty"`
}

func (x *PreCommitment) Reset() {
	*x = PreCommitment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreCommitment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreCommitment) ProtoMessage() {}

func (x *PreCommitment) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreCommitment.ProtoReflect.Descriptor instead.
func (*PreCommitment) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{8}
}

func (x *PreCommitment) GetPayloadRefs() []*PayloadRef {
	if x != nil {
		return x.PayloadRefs
	}
	return nil
}

type Parentage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parents []*ParentRef `protobuf:"bytes,1,rep,name=parents,proto3" json:"parents,omitempty"`
}

func (x *Parentage) Reset() {
	*x = Parentage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parentage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parentage) ProtoMessage() {}

func (x *Parentage) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parentage.ProtoReflect.Descriptor instead.
func (*Parentage) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{9}
}

func (x *Parentage) GetParents() []*ParentRef {
	if x != nil {
		return x.Parents
	}
	return nil
}

type ParentRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref          *MessageRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Contribution uint64      `protobuf:"varint,2,opt,name=contribution,proto3" json:"contribution,omitempty"`
}

func (x *ParentRef) Reset() {
	*x = ParentRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParentRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParentRef) ProtoMessage() {}

func (x *ParentRef) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParentRef.ProtoReflect.Descriptor instead.
func (*ParentRef) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{10}
}

func (x *ParentRef) GetRef() *MessageRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *ParentRef) GetContribution() uint64 {
	if x != nil {
		return x.Contribution
	}
	return 0
}

// StateRef is a reference to a state of the application after processing a
// set of messages.
type StateRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref []byte `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *StateRef) Reset() {
	*x = StateRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRef) ProtoMessage() {}

func (x *StateRef) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRef.ProtoReflect.Descriptor instead.
func (*StateRef) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{11}
}

func (x *StateRef) GetRef() []byte {
	if x != nil {
		return x.Ref
	}
	return nil
}

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Message containing a precommitment matching hash(data)
	Msg *MessageRef `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{12}
}

func (x *Payload) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Payload) GetMsg() *MessageRef {
	if x != nil {
		return x.Msg
	}
	return nil
}

type PayloadRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shake256_64V1 []byte `protobuf:"bytes,1,opt,name=shake256_64_v1,json=shake25664V1,proto3" json:"shake256_64_v1,omitempty"` // SHAKE256(payload.data) --> 64 bytes output
}

func (x *PayloadRef) Reset() {
	*x = PayloadRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_braid_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayloadRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadRef) ProtoMessage() {}

func (x *PayloadRef) ProtoReflect() protoreflect.Message {
	mi := &file_braid_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadRef.ProtoReflect.Descriptor instead.
func (*PayloadRef) Descriptor() ([]byte, []int) {
	return file_braid_proto_rawDescGZIP(), []int{13}
}

func (x *PayloadRef) GetShake256_64V1() []byte {
	if x != nil {
		return x.Shake256_64V1
	}
	return nil
}

var File_braid_proto protoreflect.FileDescriptor

var file_braid_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x72, 0x61, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62,
	0x72, 0x61, 0x69, 0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x31, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x64, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2e,
	0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x64, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62,
	0x72, 0x61, 0x69, 0x64, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x38, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2c,
	0x0a, 0x12, 0x65, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x65, 0x64, 0x32, 0x35,
	0x35, 0x31, 0x39, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x38, 0x0a, 0x06,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x64, 0x32, 0x35, 0x35, 0x31,
	0x39, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x11, 0x65, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x2a, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39, 0x5f, 0x76,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39,
	0x56, 0x31, 0x22, 0xe6, 0x01, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x12, 0x2b, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x64, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x64, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3e,
	0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x64, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e,
	0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b,
	0x0a, 0x0e, 0x70, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x64, 0x2e, 0x50,
	0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x70, 0x72,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x32, 0x0a, 0x0a, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x32, 0x35, 0x36, 0x5f, 0x36, 0x34, 0x5f, 0x76, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x32, 0x35, 0x36, 0x36, 0x34, 0x56, 0x31, 0x22,
	0x35, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x66,
	0x12, 0x24, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x32, 0x35, 0x36, 0x5f, 0x36, 0x34, 0x5f,
	0x76, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x32,
	0x35, 0x36, 0x36, 0x34, 0x56, 0x31, 0x22, 0x97, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x63, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x03, 0x63, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x72, 0x61, 0x69,
	0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x66, 0x52,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x64,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x45, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x34, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x66,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x64, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x66, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x66, 0x73, 0x22, 0x37, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x64, 0x2e, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x52, 0x07, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x54, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x23, 0x0a,
	0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x72, 0x61,
	0x69, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72,
	0x65, 0x66, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1c, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x72, 0x65, 0x66, 0x22, 0x42, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x62, 0x72, 0x61, 0x69, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x66, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x32, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x66, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x32,
	0x35, 0x36, 0x5f, 0x36, 0x34, 0x5f, 0x76, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x32, 0x35, 0x36, 0x36, 0x34, 0x56, 0x31, 0x42, 0x2a, 0x5a, 0x28,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x73, 0x65, 0x6b, 0x68,
	0x61, 0x72, 0x2f, 0x62, 0x72, 0x61, 0x69, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x62, 0x72, 0x61, 0x69, 0x64, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_braid_proto_rawDescOnce sync.Once
	file_braid_proto_rawDescData = file_braid_proto_rawDesc
)

func file_braid_proto_rawDescGZIP() []byte {
	file_braid_proto_rawDescOnce.Do(func() {
		file_braid_proto_rawDescData = protoimpl.X.CompressGZIP(file_braid_proto_rawDescData)
	})
	return file_braid_proto_rawDescData
}

var file_braid_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_braid_proto_goTypes = []interface{}{
	(*Message)(nil),             // 0: braid.Message
	(*Identity)(nil),            // 1: braid.Identity
	(*Secret)(nil),              // 2: braid.Secret
	(*Signature)(nil),           // 3: braid.Signature
	(*Authorship)(nil),          // 4: braid.Authorship
	(*MessageRef)(nil),          // 5: braid.MessageRef
	(*MessageSetRef)(nil),       // 6: braid.MessageSetRef
	(*PostCommitment)(nil),      // 7: braid.PostCommitment
	(*PreCommitment)(nil),       // 8: braid.PreCommitment
	(*Parentage)(nil),           // 9: braid.Parentage
	(*ParentRef)(nil),           // 10: braid.ParentRef
	(*StateRef)(nil),            // 11: braid.StateRef
	(*Payload)(nil),             // 12: braid.Payload
	(*PayloadRef)(nil),          // 13: braid.PayloadRef
	(*timestamp.Timestamp)(nil), // 14: google.protobuf.Timestamp
}
var file_braid_proto_depIdxs = []int32{
	4,  // 0: braid.Message.authorship:type_name -> braid.Authorship
	14, // 1: braid.Message.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 2: braid.Message.parentage:type_name -> braid.Parentage
	12, // 3: braid.Message.data:type_name -> braid.Payload
	1,  // 4: braid.Authorship.identity:type_name -> braid.Identity
	3,  // 5: braid.Authorship.signature:type_name -> braid.Signature
	7,  // 6: braid.Authorship.post_commitment:type_name -> braid.PostCommitment
	8,  // 7: braid.Authorship.pre_commitment:type_name -> braid.PreCommitment
	14, // 8: braid.PostCommitment.cut:type_name -> google.protobuf.Timestamp
	6,  // 9: braid.PostCommitment.messages:type_name -> braid.MessageSetRef
	11, // 10: braid.PostCommitment.state:type_name -> braid.StateRef
	13, // 11: braid.PreCommitment.payload_refs:type_name -> braid.PayloadRef
	10, // 12: braid.Parentage.parents:type_name -> braid.ParentRef
	5,  // 13: braid.ParentRef.ref:type_name -> braid.MessageRef
	5,  // 14: braid.Payload.msg:type_name -> braid.MessageRef
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_braid_proto_init() }
func file_braid_proto_init() {
	if File_braid_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_braid_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Authorship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageSetRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCommitment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreCommitment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parentage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParentRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_braid_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayloadRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_braid_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_braid_proto_goTypes,
		DependencyIndexes: file_braid_proto_depIdxs,
		MessageInfos:      file_braid_proto_msgTypes,
	}.Build()
	File_braid_proto = out.File
	file_braid_proto_rawDesc = nil
	file_braid_proto_goTypes = nil
	file_braid_proto_depIdxs = nil
}
